# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  disable.coverage.autogenerate: 'true'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core'
  inputs:
    packageType: 'sdk'
    version: 7.x
    includePreviewVersions: true

- task: DotNetCoreCLI@2
  displayName: Install ReportGenerator tool
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . dotnet-reportgenerator-globaltool

- task: DotNetCoreCLI@2
  displayName: Install Coverlet.Console tool
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . coverlet.console

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: |
      **/*.csproj
      !**/*RadarCalculator*.csproj
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run Tests'
  inputs:
    command: 'test'
    projects: |
      **/*Tests/*.csproj 
      !**/*RadarCalculator*.csproj
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Include="[*Tests]*" /p:Exclude="[*RadarCalculator]*"'
  
- task: reportgenerator@5
  displayName: Generate Code Coverage Reports
  inputs:
    reports: $(Build.SourcesDirectory)/tests/SimulationInsight.RadarFunctions.Tests/coverage.cobertura.xml
    targetdir: $(build.artifactstagingdirectory)/TestResults/
    reporttypes: 'HTML;HtmlInline_AzurePipelines;Badges;Cobertura'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Results'
  inputs:
    codeCoverageTool: cobertura
    summaryFileLocation: $(build.artifactstagingdirectory)/TestResults/cobertura.xml
    reportDirectory: '$(build.artifactstagingdirectory)/TestResults'